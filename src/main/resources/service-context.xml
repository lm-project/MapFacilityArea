<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName" default-lazy-init="true">

	<description>Spring-database配置</description>

	<context:component-scan base-package="com.autonavi.mapart">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- mybatis Dao -->
	<bean id="artDao" class="com.autonavi.mapart.orm.impl.ArtDaoImpl" />
	<bean id="userDao" class="com.autonavi.mapart.orm.impl.UserDaoImpl" />
	<bean id="taskDao" class="com.autonavi.mapart.orm.impl.TaskDaoImpl" />
	<bean id="taskitemDao" class="com.autonavi.mapart.orm.impl.TaskitemDaoImpl" />
	<bean id="facDao" class="com.autonavi.mapart.orm.impl.FacilityareaDaoImpl" />
	<bean id="referenceGeomDao" class="com.autonavi.mapart.orm.ReferenceGeomDao" />
	<bean id="fapoiRelationDao" class="com.autonavi.mapart.orm.impl.FapoiRelationDaoImpl"/>
	<bean id="facilityHistoryDao" class="com.autonavi.mapart.orm.impl.FacilityHistoryDao"/>
	<bean id="anShapeDao" class="com.autonavi.mapart.orm.impl.AnShapeDaoImpl"/>
	<bean id="anf_hi" class="com.autonavi.mapart.orm.impl.Anf_hicaicaibianDaoImpl"/>
	<bean id="cms_record" class="com.autonavi.mapart.orm.impl.Cms_RecordDaoImpl"/>
	<bean id="qaResultDao" class="com.autonavi.mapart.orm.impl.QaResultDaoImpl"/>
	<bean id="polygonCacheService" class="com.autonavi.mapart.service.PolygonCacheService" init-method="init" />
	<bean id="facilityachieveServiceImpl" class="com.autonavi.mapart.service.impl.FacilityachieveServiceImpl">
		<property name="exportCmd" value="pgsql2shp -f #exp_path# -h #host# -u ${jdbc.username} -P ${jdbc.password} -p #port# #sid# #tableName#"/>
		<property name="importCmd" value="shp2pgsql -W GBK #imp_path# #tableName# | psql -U ${jdbc.username} -h #host# -p #port# -d #sid#"></property>
		<property name="shp2psqlCmd" value="shp2pgsql -W GBK #imp_path# #tableName# > #sqlPath#"></property>
		<property name="psqlCmd" value="psql -U ${jdbc.username} -h #host# -d #sid# -p #port# -f #sqlPath#"></property>
	</bean>

	<!-- <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
		<property name="basename" value="classpath:org/springframework/security/messages_zh_CN" 
		/> </bean> -->
	<!-- 事件监听:实现了 ApplicationListener监听接口，包括AuthenticationCredentialsNotFoundEvent 
		事件， AuthorizationFailureEvent事件，AuthorizedEvent事件， PublicInvocationEvent事件 -->
	<bean
		class="org.springframework.security.authentication.event.LoggerListener" />

	<!-- 用户的密码加密或解密 -->
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />


	<!-- 用户详细信息管理 : 数据源、用户缓存、启用用户组功能。 -->
	<bean id="userDetailsManager" class=" com.autonavi.mapart.security.UserDetailsManager" />

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- Connection Pooling Info -->
		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="500" />
		<property name="poolPreparedStatements" value="false" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	 <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.oracle.driver}"/>
        <property name="url" value="${jdbc.oracle.url}"/>
        <property name="username" value="${jdbc.oracle.username}"/>
        <property name="password" value="${jdbc.oracle.password}"/>
        <property name="initialSize" value="5"/>
        <property name="maxIdle" value="30"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="500"/>
        <property name="poolPreparedStatements" value="false" />
        <property name="defaultAutoCommit" value="false"/>
    </bean>
	  <bean id="multipleDataSource" class="com.autonavi.mapart.service.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="dataSource"/>
        <property name="targetDataSources">
            <map>
                <entry key="dataSource" value-ref="dataSource"/>
                <entry key="dataSource2" value-ref="dataSource2"/>
            </map>
        </property>
    </bean>
	
	<!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" /> 
	</bean>
	
    <!-- mybatis.spring自动映射 -->
    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cnblogs.lzrabbit"/>
    </bean> -->
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	 <!--把事务控制在Service层-->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(public * com.autonavi.mapart.service.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED"  read-only="true" />
			<tx:method name="find*" propagation="REQUIRED"  read-only="true" />
			<tx:method name="query*" propagation="REQUIRED"  read-only="true" />
			<tx:method name="is*"  propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
</beans>